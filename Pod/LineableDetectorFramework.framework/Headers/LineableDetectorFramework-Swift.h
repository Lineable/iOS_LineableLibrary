// Generated by Apple Swift version 2.1.1 (swiftlang-700.1.101.15 clang-700.1.81)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if defined(__has_include) && __has_include(<uchar.h>)
# include <uchar.h>
#elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
#endif

typedef struct _NSZone NSZone;

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted) 
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
#endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#if defined(__has_feature) && __has_feature(modules)
@import CoreLocation;
@import ObjectiveC;
@import Foundation;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"

@interface CLLocation (SWIFT_EXTENSION(LineableDetectorFramework))
@end

enum LineableDetectorState : NSInteger;
@class MissingLineable;
@protocol LineableDetectorDelegate;
@class CLLocationManager;
@class CLRegion;
@class CLBeacon;
@class CLBeaconRegion;

SWIFT_CLASS("_TtC25LineableDetectorFramework16LineableDetector")
@interface LineableDetector : NSObject <CLLocationManagerDelegate>
+ (LineableDetector * __nonnull)sharedDetector;
@property (nonatomic) enum LineableDetectorState state;
@property (nonatomic, strong) MissingLineable * __nullable missingLineable;
@property (nonatomic, strong) CLLocation * __nullable lastLocation;
- (void)setupWithDelegate:(id <LineableDetectorDelegate> __nonnull)delegate apiKey:(NSString * __nonnull)apiKey;
- (void)setDetectInterval:(double)interval;
- (void)setBackgroundMode:(BOOL)enabled;
- (void)stop;
- (void)start;
- (void)locationManager:(CLLocationManager * __nonnull)manager didEnterRegion:(CLRegion * __nonnull)region;
- (void)locationManager:(CLLocationManager * __nonnull)manager didExitRegion:(CLRegion * __nonnull)region;
- (void)locationManager:(CLLocationManager * __nonnull)manager didDetermineState:(CLRegionState)state forRegion:(CLRegion * __nonnull)region;
- (void)locationManager:(CLLocationManager * __nonnull)manager didRangeBeacons:(NSArray<CLBeacon *> * __nonnull)beacons inRegion:(CLBeaconRegion * __nonnull)region;
- (void)locationManager:(CLLocationManager * __nonnull)manager didUpdateLocations:(NSArray<CLLocation *> * __nonnull)locations;
- (void)sendDetectedBeacons:(NSArray<CLBeacon *> * __nonnull)beacons connectedLineables:(NSArray<NSDictionary<NSString *, NSString *> *> * __nonnull)connectedLineables completion:(void (^ __nonnull)(NSInteger, MissingLineable * __nullable))completion;
@end

enum LineableDetectorError : NSInteger;

SWIFT_PROTOCOL("_TtP25LineableDetectorFramework24LineableDetectorDelegate_")
@protocol LineableDetectorDelegate
- (void)didStartRangingLineables;
- (void)didStopRangingLineables;
- (void)willDetectLineables;
- (void)didDetectLineables:(NSInteger)numberOfLineablesDetected missingLineable:(MissingLineable * __nullable)missingLineable;
- (void)didFailDetectingLineables:(enum LineableDetectorError)error;
@end

typedef SWIFT_ENUM(NSInteger, LineableDetectorError) {
  LineableDetectorErrorBluetoothOff = 0,
  LineableDetectorErrorNoLineableDetected = 1,
  LineableDetectorErrorConnectionFailed = 2,
  LineableDetectorErrorGatewayDidNotMove = 3,
};

typedef SWIFT_ENUM(NSInteger, LineableDetectorState) {
  LineableDetectorStateIdle = 0,
  LineableDetectorStateListening = 1,
};

@class NSDate;

SWIFT_CLASS("_TtC25LineableDetectorFramework15MissingLineable")
@interface MissingLineable : NSObject
@property (nonatomic) NSInteger seq;
@property (nonatomic, copy) NSString * __nonnull name;
@property (nonatomic, copy) NSString * __nullable lineableDescription;
@property (nonatomic, copy) NSArray<NSString *> * __nonnull photoUrls;
@property (nonatomic, copy) NSString * __nullable reporterName;
@property (nonatomic, copy) NSString * __nullable reporterPhoneNumber;
@property (nonatomic, strong) NSDate * __nullable reportedDate;
@end


@interface NSDate (SWIFT_EXTENSION(LineableDetectorFramework))
+ (NSDate * __nonnull)dateByString:(NSString * __nonnull)dateString;
- (NSString * __nonnull)formattedWith:(NSString * __nonnull)format;
@end


@interface NSMutableURLRequest (SWIFT_EXTENSION(LineableDetectorFramework))
@end


@interface UIDevice (SWIFT_EXTENSION(LineableDetectorFramework))
@property (nonatomic, readonly, copy) NSString * __nonnull modelName;
@end

#pragma clang diagnostic pop
